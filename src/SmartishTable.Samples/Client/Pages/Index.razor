@page "/"
@using SmartishTable.Samples.Shared
@inject HttpClient Http

<h2>SmartishTable Samples - Cards</h2>

@if (list == null)
{
  <p><em>Loading...</em></p>
}
else
{
    <span>CRUD buttons</span>
    <button type="button" @onclick=AddRange>Add 3</button>
  <button type="button" @onclick=Add1>Add 1</button>
  <button type="button" @onclick=Update1st>Update Repeater Index 0</button>
  <button type="button" @onclick=Delete1st>Delete Repeater Index 0</button>
  <SmartishTable.Root SafeList="list" HeaderTag="div" @ref=smartishTable>
    <h4>Sorts</h4>
    <div class="form-row">
      <SmartishTable.Sort Field="o=>o.LastName" IsDefaultSort=true Css="col-md-4 canSelect hover">Last Name</SmartishTable.Sort>
      <SmartishTable.Sort Field="o=>o.FirstName" Css="col-md-4 canSelect hover">First Name</SmartishTable.Sort>
      <SmartishTable.Sort Field="o=>o.Email" Css="col-md-4 canSelect hover">Email</SmartishTable.Sort>
      <SmartishTable.Repeater Context="row" @ref=repeater>
          <RowTemplate>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 mb-2">
          <div class="card h-100">
            <div class="card-header">
              @row.Item.Id @row.Item.FirstName @row.Item.LastName
            </div>
            <div class="card-body">
              <div class="hover">Birth Date: @row.Item.BirthDate.ToShortDateString()</div>
              <div class="hover">City: @row.Item.City</div>
              <div class="hover">Company: @row.Item.Company</div>
              <div class="hover">Country: @row.Item.Country</div>
              <div class="hover">Dependents: @row.Item.Dependents</div>
              <div class="hover">Email: @row.Item.Email</div>
              <div class="hover">Gender: @row.Item.Gender</div>
              <div class="hover">Income: @row.Item.Income</div>
              <div class="hover">Active: @row.Item.IsActive</div>
              <div class="hover">Job Title: @row.Item.JobTitle</div>
                <div>Repeater Index: @row.Index</div>
            </div>
          </div>
        </div>
        </RowTemplate>
      </SmartishTable.Repeater>
    </div>
  </SmartishTable.Root>
}

@code {
  private List<Person> list;
  private SmartishTable.Root<Person> smartishTable;
  private SmartishTable.Repeater<Person> repeater;

  protected override async Task OnInitializedAsync()
  {
    list = await Http.GetFromJsonAsync<List<Person>>("People/AFew");
  }

  private Task AddRange()
  {
    var asdf = smartishTable.DisplayList.Take(3).SerializeJson().DeserializeJson<IEnumerable<Person>>();
    foreach (var item in asdf)
    {
      item.FirstName = "Add Range";
    }
    return smartishTable.AddRange(asdf);
  }

  private Task Add1()
  {
    var item = smartishTable.DisplayList.FirstOrDefault();
    if (item != null)
      return smartishTable.Add(item.SerializeJson().DeserializeJson<Person>());
    return Task.CompletedTask;
  }

  private Task Update1st()
  {
    var item = smartishTable.DisplayList.FirstOrDefault();
    if (item == null)
      return Task.CompletedTask;
    item = item.SerializeJson().DeserializeJson<Person>();
    item.FirstName = "Updated";
    return smartishTable.UpdateAt(0, item);    
  }

  private Task Delete1st()
  {
    if (list.Count > 0)
      return smartishTable.RemoveAt(0);
    return Task.CompletedTask;
  }
}